name: Build Android APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4
        
      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm
          
      - name: 🏗 Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔍 Run type check
        run: npm run type-check --if-present
        
      - name: 🚀 Build APK (Preview)
        if: github.event_name != 'workflow_dispatch' || github.event.inputs.build_type == 'preview'
        run: eas build --platform android --profile preview --non-interactive --no-wait
        
      - name: 🚀 Build APK (Production)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.build_type == 'production'
        run: eas build --platform android --profile production --non-interactive --no-wait
        
      - name: 💬 Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 Android APK build started! Check the [Expo dashboard](https://expo.dev) for build progress.'
            })

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4
        
      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🧪 Run tests
        run: npm test --if-present
        
      - name: 🔍 Run linting
        run: npm run lint --if-present

  build-web-preview:
    name: Build Web Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4
        
      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🌐 Build web version
        run: npx expo export --platform web
        
      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.event_name == 'pull_request'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          destination_dir: pr-${{ github.event.number }}
          
      - name: 💬 Comment with preview link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🌐 Web preview available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ github.event.number }}'
            })